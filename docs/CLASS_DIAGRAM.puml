@startuml Blood Bank Management System - Class Diagram
!theme plain
skinparam backgroundColor #FFFFFF
skinparam class {
    BackgroundColor #E8F5E8
    BorderColor #2E7D32
    ArrowColor #2E7D32
}

title Blood Bank Management System - Class Diagram

' User Entity
class User {
    -Long id
    -String username
    -String email
    -String password
    -String firstName
    -String lastName
    -String phoneNumber
    -Role role
    -BloodType bloodType
    -boolean isActive
    -LocalDateTime createdAt
    -LocalDateTime updatedAt
    
    +User()
    +User(Long id, String username, String email, String password, String firstName, String lastName, String phoneNumber, Role role, BloodType bloodType, boolean isActive, LocalDateTime createdAt, LocalDateTime updatedAt)
    +getAuthorities(): Collection<? extends GrantedAuthority>
    +isAccountNonExpired(): boolean
    +isAccountNonLocked(): boolean
    +isCredentialsNonExpired(): boolean
    +isEnabled(): boolean
    +onCreate(): void
    +onUpdate(): void
}

' User Enums
enum Role {
    ADMIN
    STAFF
    DONOR
    PATIENT
}

enum BloodType {
    A_POSITIVE
    A_NEGATIVE
    B_POSITIVE
    B_NEGATIVE
    AB_POSITIVE
    AB_NEGATIVE
    O_POSITIVE
    O_NEGATIVE
}

' BloodInventory Entity
class BloodInventory {
    -Long id
    -BloodType bloodType
    -Integer quantity
    -String unitOfMeasure
    -LocalDateTime expiryDate
    -LocalDateTime collectionDate
    -Long donorId
    -String batchNumber
    -Status status
    -String notes
    -LocalDateTime createdAt
    -LocalDateTime updatedAt
    
    +BloodInventory()
    +BloodInventory(Long id, BloodType bloodType, Integer quantity, String unitOfMeasure, LocalDateTime expiryDate, LocalDateTime collectionDate, Long donorId, String batchNumber, Status status, String notes, LocalDateTime createdAt, LocalDateTime updatedAt)
    +onCreate(): void
    +onUpdate(): void
}

enum BloodInventoryStatus {
    AVAILABLE
    RESERVED
    EXPIRED
    DISCARDED
    IN_TRANSIT
}

' Donation Entity
class Donation {
    -Long id
    -User donor
    -BloodType bloodType
    -Integer quantity
    -String unitOfMeasure
    -LocalDateTime donationDate
    -LocalDateTime expiryDate
    -String batchNumber
    -DonationStatus status
    -Boolean healthScreeningPassed
    -Double hemoglobinLevel
    -String bloodPressure
    -Integer pulseRate
    -Double temperature
    -String notes
    -LocalDateTime createdAt
    -LocalDateTime updatedAt
    
    +Donation()
    +Donation(Long id, User donor, BloodType bloodType, Integer quantity, String unitOfMeasure, LocalDateTime donationDate, LocalDateTime expiryDate, String batchNumber, DonationStatus status, Boolean healthScreeningPassed, Double hemoglobinLevel, String bloodPressure, Integer pulseRate, Double temperature, String notes, LocalDateTime createdAt, LocalDateTime updatedAt)
}

enum DonationStatus {
    PENDING
    APPROVED
    REJECTED
    COMPLETED
    CANCELLED
}

' Request Entity
class Request {
    -Long id
    -User requester
    -String hospitalName
    -String patientName
    -BloodType bloodType
    -Integer quantity
    -String unitOfMeasure
    -LocalDateTime requestDate
    -LocalDateTime requiredDate
    -Priority priority
    -RequestStatus status
    -String reason
    -String doctorName
    -String contactNumber
    -String notes
    -LocalDateTime createdAt
    -LocalDateTime updatedAt
    
    +Request()
    +Request(Long id, User requester, String hospitalName, String patientName, BloodType bloodType, Integer quantity, String unitOfMeasure, LocalDateTime requestDate, LocalDateTime requiredDate, Priority priority, RequestStatus status, String reason, String doctorName, String contactNumber, String notes, LocalDateTime createdAt, LocalDateTime updatedAt)
}

enum Priority {
    LOW
    NORMAL
    HIGH
    URGENT
}

enum RequestStatus {
    PENDING
    APPROVED
    REJECTED
    FULFILLED
    CANCELLED
}

' DTOs
class AuthRequest {
    -String username
    -String password
    
    +AuthRequest()
    +AuthRequest(String username, String password)
}

class AuthResponse {
    -String token
    -String message
    
    +AuthResponse()
    +AuthResponse(String token, String message)
}

class RegisterRequest {
    -String username
    -String email
    -String password
    -String firstName
    -String lastName
    -String phoneNumber
    -Role role
    -BloodType bloodType
    
    +RegisterRequest()
    +RegisterRequest(String username, String email, String password, String firstName, String lastName, String phoneNumber, Role role, BloodType bloodType)
}

class UserUpdateRequest {
    -String firstName
    -String lastName
    -String phoneNumber
    -BloodType bloodType
    
    +UserUpdateRequest()
    +UserUpdateRequest(String firstName, String lastName, String phoneNumber, BloodType bloodType)
}

class PasswordChangeRequest {
    -String currentPassword
    -String newPassword
    
    +PasswordChangeRequest()
    +PasswordChangeRequest(String currentPassword, String newPassword)
}

' Relationships
User ||--o{ Donation : "donates"
User ||--o{ Request : "requests"
User ||--o{ BloodInventory : "donates to"

' Inheritance
User ..|> UserDetails : implements

' Notes
note right of User
    Implements UserDetails interface
    for Spring Security
end note

note right of BloodInventory
    Tracks blood stock levels
    and availability status
end note

note right of Donation
    Records blood donations
    with health screening data
end note

note right of Request
    Manages blood requests
    with priority levels
end note

@enduml
